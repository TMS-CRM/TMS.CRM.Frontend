name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    if: false  # Temporarily disabling CD
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install CDK dependencies
        run: |
          cd cdk
          npm ci

      - name: Configure AWS credentials for Certificate Stack (us-east-1)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Bootstrap CDK (us-east-1)
        run: |
          if ! aws ssm get-parameter --name /cdk-bootstrap/hnb659fds/version --region us-east-1; then
            echo "Bootstrapping CDK environment..."
            npx --package aws-cdk cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/us-east-1 --require-approval never
          else
            echo "CDK environment already bootstrapped."
          fi

      - name: Deploy certificate stack
        run: |
          cd cdk
          npm run cdk:deploy -- \
            --require-approval never \
            --context stack=TmsCrmFrontendCertificateStack \
            TmsCrmFrontendCertificateStack \
            --parameters TmsCrmFrontendDomain=${{ vars.TMS_CRM_FRONTEND_DOMAIN }}

      - name: Get Certificate ARN from Output
        id: get_cert_arn
        run: |
          CERT_ARN=$(aws cloudformation describe-stacks \
            --stack-name TmsCrmFrontendCertificateStack \
            --query "Stacks[0].Outputs[?OutputKey=='CertificateArnOutput'].OutputValue" \
            --output text --region us-east-1)
          if [ -z "$CERT_ARN" ]; then
            echo "Certificate ARN is empty! Failing the job."
            exit 1
          fi
          echo "CERT_ARN=$CERT_ARN" >> $GITHUB_ENV

      # Switch AWS region and credentials for frontend deployment
      - name: Configure AWS credentials for Frontend Stack (ap-southeast-2)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Bootstrap CDK (ap-southeast-2)
        run: |
          if ! aws ssm get-parameter --name /cdk-bootstrap/hnb659fds/version --region ap-southeast-2; then
            echo "Bootstrapping CDK environment..."
            npx --package aws-cdk cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/ap-southeast-2 --require-approval never
          else
            echo "CDK environment already bootstrapped."
          fi

      - name: Install and build frontend
        run: |
          npm ci
          npm run build

      - name: Install CDK dependencies for frontend stack
        run: |
          cd cdk
          npm ci

      - name: Deploy frontend stack
        run: |
          cd cdk
          npm run cdk:deploy -- \
            --require-approval never \
            --context stack=TmsCrmFrontendStack \
            TmsCrmFrontendStack \
            --parameters TmsCrmFrontendDomain=${{ vars.TMS_CRM_FRONTEND_DOMAIN }} \
            --parameters TmsCrmFrontendCertificateArn=$CERT_ARN
